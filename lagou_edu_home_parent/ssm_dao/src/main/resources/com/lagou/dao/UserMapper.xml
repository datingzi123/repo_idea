<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lagou.dao.UserMapper">

    <!--用户分页&多条件组合查询（用户名 开始创建时间结束创建时间）-->
    <select id="findAllUserByPage" parameterType="com.lagou.domain.UserVO" resultType="com.lagou.domain.User">
        select * from user
        <where>
            <if test="true">
                and is_del != 1
            </if>
            <if test="username != null and username != ''">
                and name = #{username}
            </if>
            <if test="startCreateTime != null and endCreateTime != null">
                and create_time BETWEEN #{startCreateTime} AND #{endCreateTime}
            </if>
        </where>
    </select>

    <!--更新用户状态-->
    <update id="updateUserStatus" parameterType="com.lagou.domain.User">
        update user set status = #{status},update_time = #{update_time} where id = #{id}
    </update>

    <!--用户登录：根据用户名（手机号）查询用户-->
    <select id="login" parameterType="com.lagou.domain.User" resultType="com.lagou.domain.User">
        select * from user where phone = #{phone}
    </select>

    <insert id="saveUser" parameterType="com.lagou.domain.User">
        insert into user values(null,#{name},#{portrait},#{phone},#{password},#{reg_ip},
        #{account_non_expired},#{credentials_non_expired},#{account_non_locked},#{status},#{is_del},#{create_time},#{update_time})
    </insert>



    <!--根据用户id清空中间表的关联关系-->
    <delete id="deleteUserContextRole" parameterType="int">
        delete from user_role_relation where user_id =#{userId}
    </delete>

    <!--分配角色：向中间表添加记录-->
    <insert id="userContextRole" parameterType="com.lagou.domain.User_Role_relation">
        insert into user_role_relation values(null,#{userId},#{roleId},#{createdTime},#{updatedTime},#{createdBy},#{updatedby})
    </insert>


    <!--动态菜单显示：需要编写下面4个功能-->
    <!--1.根据用户id，查询该用户关联的角色信息 （分配角色回显）-->
    <select id="findUserRelationRoleById" parameterType="int" resultType="com.lagou.domain.Role">
        SELECT * FROM roles r INNER JOIN user_role_relation ur ON r.id =ur.role_id WHERE ur.user_id = #{userid}
    </select>

    <!--2.根据角色id，查询角色所拥有的顶级菜单信息（parent_id=-1） 多个角色id-->
    <select id="findParentMenuByRoleId" parameterType="java.util.List" resultType="com.lagou.domain.Menu">
        <!--SELECT
        DISTINCT m.* FROM roles r
        INNER JOIN role_menu_relation rm ON r.id = rm.role_id
        INNER JOIN menu m ON m.id = rm.menu_id WHERE m.parent_id = -1 AND r.id IN
        <foreach collection="list" item="item" open="(" separator="," close=")">#{item}</foreach>-->

        SELECT
        DISTINCT m.*
        FROM roles r INNER JOIN role_menu_relation rm ON r.`id` = rm.role_id
        INNER JOIN menu m ON rm.menu_id = m.id
        WHERE m.parent_id = -1 AND r.id IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>

    </select>


    <!--3.根据PID(parent_id),查询子级菜单信息-->
    <select id="findSubMenuByPid" parameterType="int" resultType="com.lagou.domain.Menu">
        select * from menu where parent_id = #{parentId}
    </select>

    <!--4.获取用户拥有的资源权限信息：根据角色id来获取资源信息-->
    <select id="findResourceByRoleId" parameterType="java.util.List" resultType="com.lagou.domain.Resource">
        SELECT
            DISTINCT r.* FROM resource r INNER JOIN role_resource_relation rr ON r.id = rr.resource_id INNER JOIN roles ro ON ro.id = rr.role_id WHERE ro.id IN
            <foreach collection="list" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
    </select>

</mapper>